//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ZemogaDBEntities : DbContext
    {
        public ZemogaDBEntities()
            : base("name=ZemogaDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Position> Position { get; set; }
        public virtual DbSet<Projects> Projects { get; set; }
        public virtual DbSet<Skill> Skill { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
    
        public virtual ObjectResult<Get_Employees_Result> Get_Employees(string filter)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Employees_Result>("Get_Employees", filterParameter);
        }
    
        public virtual int AddSkillEmp(Nullable<int> empID, string skills)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("Skills", skills) :
                new ObjectParameter("Skills", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSkillEmp", empIDParameter, skillsParameter);
        }
    
        [DbFunction("ZemogaDBEntities", "Split1")]
        public virtual IQueryable<Nullable<long>> Split1(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<long>>("[ZemogaDBEntities].[Split1](@input)", inputParameter);
        }
    
        public virtual ObjectResult<GetSkillsByEmployee_Result> GetSkillsByEmployee(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkillsByEmployee_Result>("GetSkillsByEmployee", empIDParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", empIDParameter);
        }
    }
}
